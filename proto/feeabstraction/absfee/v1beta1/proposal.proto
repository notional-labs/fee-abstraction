syntax = "proto3";
package feeabstraction.absfee.v1beta1;

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";

option go_package = "github.com/notional-labs/feeabstraction/v2/x/feeabs/types";

message HostChainFeeAbsConfig {
  // ibc token is allowed to be used as fee token
  string ibc_denom = 1 [ (gogoproto.moretags) = "yaml:\"allowed_token\"" ];

  // token_in in cross_chain swap contract.
  string osmosis_pool_token_denom_in = 2;

  // TODO: middleware address in hostchain, can we refator this logic ?
  string middleware_address = 3;

  // transfer channel from customer_chain -> host chain
  string ibc_transfer_channel = 4;

  // transfer channel from host chain -> osmosis
  string host_zone_ibc_transfer_channel = 5;

  // crosschain-swap contract address
  string crosschain_swap_address = 6;

  // pool id
  uint64 pool_id = 7;

  // Active
  bool is_osmosis = 8;

  // Frozen
  bool frozen = 9;

  // Query channel
  string osmosis_query_channel = 10;
}

message AddHostZoneProposal {
  option (gogoproto.goproto_getters) = false;
  // the title of the proposal
  string title = 1;
  // the description of the proposal
  string description = 2;
  // the host chain config
  HostChainFeeAbsConfig host_chain_config = 3;
}

message DeleteHostZoneProposal {
	option (gogoproto.goproto_getters) = false;
	// the title of the proposal
	string title = 1;
	// the description of the proposal
	string description = 2;
	// the  ibc denom of this token
	string ibc_denom = 3;
}

message SetHostZoneProposal {
  option (gogoproto.goproto_getters) = false;
  // the title of the proposal
  string title = 1;
  // the description of the proposal
  string description = 2;
  // the host chain config
  HostChainFeeAbsConfig host_chain_config = 3;
}